/**
 * Generates minimal JNI codegen stubs for RNUsercentricsModule
 * so the consuming app’s CMake build doesn’t fail even if full codegen isn’t used.
 */

const fs = require("fs");
const path = require("path");

const jniDir = path.join(__dirname, "..", "android", "build", "generated", "source", "codegen", "jni");

fs.mkdirSync(jniDir, { recursive: true });

const hFile = `/**
 * This code was generated by [react-native-codegen].
 * Do not edit manually.
 */

#pragma once

#include <ReactCommon/JavaTurboModule.h>
#include <ReactCommon/TurboModule.h>
#include <jsi/jsi.h>

namespace facebook::react {

JSI_EXPORT
std::shared_ptr<TurboModule> RNUsercentricsModule_ModuleProvider(
  const std::string &moduleName,
  const JavaTurboModule::InitParams &params
);

} // namespace facebook::react
`;

const cppFile = `/**
 * This code was generated by [react-native-codegen].
 * Do not edit manually.
 */

#include "RNUsercentricsModule.h"

namespace facebook::react {

std::shared_ptr<TurboModule> RNUsercentricsModule_ModuleProvider(
  const std::string &moduleName,
  const JavaTurboModule::InitParams &params
) {
  // Placeholder for JNI binding, intentionally empty.
  return nullptr;
}

} // namespace facebook::react
`;

const cmakeFile = `# Minimal CMake stub for RNUsercentricsModule
cmake_minimum_required(VERSION 3.13)
set(CMAKE_VERBOSE_MAKEFILE ON)

file(GLOB react_codegen_SRCS CONFIGURE_DEPENDS *.cpp)

add_library(
  react_codegen_RNUsercentricsModule
  OBJECT
  \${react_codegen_SRCS}
)

target_include_directories(
  react_codegen_RNUsercentricsModule
  PUBLIC
  .
)

target_link_libraries(
  react_codegen_RNUsercentricsModule
  fbjni
  jsi
  reactnative
)

target_compile_options(
  react_codegen_RNUsercentricsModule
  PRIVATE
  -DLOG_TAG=\\"ReactNative\\"
  -fexceptions
  -frtti
  -std=c++20
  -Wall
)
`;

fs.writeFileSync(path.join(jniDir, "RNUsercentricsModule.h"), hFile);
fs.writeFileSync(path.join(jniDir, "RNUsercentricsModule-generated.cpp"), cppFile);
fs.writeFileSync(path.join(jniDir, "CMakeLists.txt"), cmakeFile);

console.log("✅ JNI codegen stubs generated at:", jniDir);
