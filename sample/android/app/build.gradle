plugins {
    id("com.android.application")
    id("org.jetbrains.kotlin.android")
    id("com.facebook.react")
}

def reactNativeVersion = "0.79.6"

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.usercentrics.reactnativesdk.sample"
    defaultConfig {
        applicationId "com.usercentrics.reactnativesdk.sample"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        def isNewArchEnabled = project.findProperty("newArchEnabled") == "true"
        def isHermesEnabled = project.findProperty("hermesEnabled") != "false"
        buildConfigField("boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchEnabled.toString())
        buildConfigField("boolean", "IS_HERMES_ENABLED", isHermesEnabled.toString())

        ndk {
            abiFilters.addAll(["armeabi-v7a", "arm64-v8a", "x86", "x86_64"])
        }
    }

    buildTypes {
        debug {
            debuggable true
            packagingOptions {
                jniLibs.useLegacyPackaging = false
            }
        }
        release { minifyEnabled false }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }
    
    buildFeatures {
        buildConfig = true
    }

    packagingOptions {
        jniLibs {
            pickFirsts.add("**/libjscexecutor.so")
            pickFirsts.add("**/libhermes.so")
            pickFirsts.add("**/libreactnativejni.so")
            pickFirsts.add("**/libreact_featureflagsjni.so")
            useLegacyPackaging = false
        }
    }
}

configurations.all {
    resolutionStrategy {
        force("com.facebook.react:react-native:$reactNativeVersion")
        force("com.facebook.react:hermes-engine:$reactNativeVersion")
    }
}

dependencies {
    // SDK Usercentrics
    implementation(project(":react-native-usercentrics"))

    // React Native
    implementation("com.facebook.react:react-android:$reactNativeVersion")

    implementation(project(":react-native-webview"))
    implementation(project(":react-native-screens"))
    implementation(project(":react-native-safe-area-context"))

    if (project.findProperty("hermesEnabled") != "false") {
        debugImplementation("com.facebook.react:hermes-android:$reactNativeVersion") {
            exclude(group: "com.facebook.fbjni")
        }
    }

    // Flipper dependencies
    debugImplementation("com.facebook.flipper:flipper:0.212.0")
    debugImplementation("com.facebook.flipper:flipper-network-plugin:0.212.0")
    debugImplementation("com.facebook.soloader:soloader:0.10.5")
}

react {
    jsRootDir = file("${rootDir}/../src")
}

// ===================================================================================================
// AUTOLINKING AUTOMATION
// ===================================================================================================
// Include the external autolinking configuration file
// This file contains the generateAutolinking task and automation logic
// ===================================================================================================
apply from: "${rootDir}/plugin/autolinking.gradle"
